@model MvcMyLibrary.ViewModels.SaveBookViewModel

<div id="add-book-popup">
    <div class="top-bar">
        <button type="button" class="close x-close" data-dismiss="modal">&times;</button>
        Add Book
    </div>

    @*use multipart/form-data when your form includes any <input type="file"> elements*@
    @using (Html.BeginForm("SaveBook", "BookActions", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
            <div class="form-wrap">
                <div class="form-group">
                    @Html.LabelFor(m => m.Book.Title, "Title:", new { @class = "col-sm-3 control-label"})
                    <div class="col-sm-8">
                        @*--za HTML5 validaciju dovoljno je dodati atribut 'required="required"'--*@
                        @*I need to add Name="Title", otherwise textbox name is "Book.Title" because of the model, and like that it can't be passed to SaveBook Controller*@
                        @Html.TextBoxFor(m => m.Book.Title, new { Name="Title", @class = "form-control", @placeholder = "Title", @style = "max-width: 100%" })
                        @Html.ValidationMessageFor(m => m.Book.Title, "Enter Book Title (html)", new { Name="Title"})
                    </div>
                </div>
                <br />
                <div class="form-group">
                    @*<label for="inputName" class="col-sm-3 control-label">Author:</label>*@
                    @Html.LabelFor(m => m.Book.AuthorName, "Author:", new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.Book.AuthorName, new { Name = "AuthorName", @class = "form-control", @placeholder = "Name" })
                    </div>
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.Book.AuthorSurname, new { Name = "AuthorSurname", @class = "form-control", @placeholder = "Surname" })
                    </div>
                </div>
                <div class="form-group" style="margin-top: 35px;">
                    <label for="ddGenre" class="col-sm-3 control-label">Select Genre:</label>
                    <div class="col-sm-8" id="ddGenre">                        
                        @*new SelectList(@Model.GenreList, "GenreId", "GenreName")  -- GenreId je property iz Genre modela koji prestavlja Value od SelectListItema,
                                                                                    -- GenreName je property iz Genre modela koji prestavlja Text od SelectListItema*@
                        @Html.DropDownList("GenreId", new SelectList(@Model.GenreList, "GenreId", "GenreName"), "-- Select Genre --", new { @class = "form-control btn-select", @title = "Genre" })
                        @Html.ValidationMessageFor(model => model.GenreList, "Select Genre (html)")
                    </div>
                </div>
                <div class="form-group" style="margin-top: 30px;">
                    <label for="inputImage" class="col-sm-3 control-label">Upload Image:</label>
                    <div class="col-sm-8">
                        @*<button type="button" class="btn btn-default" id="inputImage"><span class="glyphicon glyphicon-folder-open" style="margin-right: 12px;"></span>Browse</button>*@
                        <label class="btn btn-default" style="width: 100%;">
                            <input id="image-upload" name="ImageUrl" type="file" style="min-width: 100%;">
                        </label>
                    </div>
                </div>
            </div>
            <div class="save-buttons">
                <button type="submit" class="btn btn-success col-sm-3 col-sm-offset-2" @*onclick="alert('This is saved')"*@>Save</button>
                <button type="button" class="btn btn-danger col-sm-3 col-sm-offset-2" data-dismiss="modal">Cancel</button>
            </div>
    } @*</form>*@
</div>